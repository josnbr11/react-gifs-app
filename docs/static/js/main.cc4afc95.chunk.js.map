{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","key","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"qMAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KA0BA,OAEI,0BAAMC,SAnBS,SAACC,GAEpBA,EAAEC,iBAGMJ,EAAWK,OAAOC,OAAS,IAG3BR,GAAgB,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OAExCN,EAAc,OAWd,2BACAO,KAAK,OACLC,MAAQT,EACRU,SA9BkB,SAACP,GAEvBF,EAAgBE,EAAEQ,OAAOF,Y,uBCRpBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAETC,EAFS,iDAEwCC,UAAUH,GAFlD,+DAGII,MAAOF,GAHX,cAGTG,EAHS,gBAIMA,EAAKC,OAJX,uBAIRC,EAJQ,EAIRA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAE1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAX3B,kBAgBPM,GAhBO,4CAAH,sDCDPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAGpC,OACI,yBAAKc,UAAU,+CACX,yBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,2BAAKA,EAAL,OCHCO,EAAU,SAAC,GAAmB,IAAjBnB,EAAgB,EAAhBA,UAG1B,ECL4B,SAAEA,GAE1B,MAA0Bd,mBAAS,CAE/BqB,KAAM,GACNa,SAAS,IAHb,mBAAOC,EAAP,KAAcC,EAAd,KA4BH,OAtBAC,qBAAU,WAEPxB,EAAQC,GACHwB,MAAK,SAAAC,GAENC,YAAY,WAGRJ,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAId,UAMP,CAACpB,IAEGqB,EDzByBM,CAAc3B,GAAlCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAgBjB,OACA,oCACI,wBAAIJ,UAAU,yCAAd,IAA0DhB,GAExDoB,GAAW,wCAEb,yBAAKJ,UAAU,aAIXH,EAAOJ,KAAI,SAAAC,GAAG,OAEN,kBAAC,EAAD,eACIkB,IAAKlB,EAAIC,IACJD,UEWdmB,G,MA3CM,WAGjB,MAAoC3C,mBAAS,CAAC,cAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAaA,OACA,oCACA,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAIQ6C,EAAWrB,KAAK,SAAAT,GAAS,OAEvB,kBAAC,EAAD,CACE4B,IAAQ5B,EACRA,UAAcA,WC9B9B+B,IAASC,OAEL,kBAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.cc4afc95.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ({setCategorias}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');   //Aqui se coloca el esta inicial en comillas porque si se deja en \r\n                                                        //blanco entrega undefined.\r\n\r\n    const handleInputChange = (e) => {\r\n\r\n        setInputValue ( e.target.value )\r\n\r\n    };\r\n\r\nconst   handleSubmit = (e) => {\r\n\r\n    e.preventDefault()  // Esto se hace para prevenir el comportamiento del formulario\r\n                        // por defecto.\\\r\n\r\n        if (inputValue.trim().length > 2){\r\n\r\n            \r\n            setCategorias ( cats => [inputValue, ...cats]);\r\n        \r\n            setInputValue('');\r\n        }\r\n};\r\n\r\n\r\n//onSubmit se hace para que ejecute algo de JS cuando se envie el \r\n// formulario. En esta ejemplo se ejecuta un function\r\n    return(\r\n        \r\n        <form onSubmit={ handleSubmit }> \r\n\r\n            <input\r\n            type='text'         \r\n            value={ inputValue }\r\n            onChange={ handleInputChange }\r\n            />\r\n\r\n        </form>\r\n       \r\n    )\r\n}\r\n\r\n// Aqui se coloca  un ProTypes donde debe asegurarse que AddCategory reciba una funcion en este caso\r\n\r\nAddCategory.propTypes = {\r\n\r\n    setCategorias: PropTypes.func.isRequired  \r\n\r\n}\r\n\r\n\r\n\r\n","\r\n\r\n    // Se realiza una funcion para entraer las imagens de la API\r\nexport const getGifs = async(categoria) => {   // Se le coloca el async para que la const se transforme en Promesa\r\n        \r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(categoria)}&limit=20&api_key=HDMgrGKCOYdSSOxms0iA6oNJ8YQ3pDct`;\r\n        const resp = await fetch( url );\r\n        const {data} = await resp.json();\r\n\r\n        const gifs = data.map( img => {\r\n\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n\r\n            }\r\n         }) \r\n          \r\n         return gifs;         \r\n        \r\n    };","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n    \r\n    return (\r\n        <div className=\"card  animate__animated animate__fadeInLeft\">\r\n            <img src={ url } alt={ title }/>\r\n            <p>{ title } </p>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n//import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ( {categoria} ) => {\r\n\r\n\r\nconst { data:images, loading } = useFetchGifs( categoria );\r\n\r\n\r\n    \r\n\r\n    //const [images, setImages] = useState([]);\r\n\r\n    // Leer bien para que sirve\r\n    // useEffect( () => {\r\n\r\n    //     getGifs(categoria)\r\n    //     .then( setImages);   \r\n\r\n    // }, [categoria])\r\n\r\n   \r\n    return (\r\n    <>\r\n        <h2 className=\"animate__animated animate__rubberBand\" > { categoria }</h2>\r\n        \r\n        { loading && <p> Loading </p>}\r\n\r\n        <div className='card-grid'>\r\n        {\r\n            \r\n            \r\n            images.map(img => (\r\n    \r\n                    <GifGridItem \r\n                        key={img.id}\r\n                        { ...img}\r\n                    \r\n                    />\r\n            ))\r\n\r\n        }\r\n        </div>\r\n\r\n\r\n\r\n\r\n        \r\n        \r\n\r\n        \r\n       \r\n\r\n    </>\r\n    )\r\n}\r\n\r\n//         {/* \r\n\r\n            \r\n// {/* \r\n//                 \r\n//                     ))\r\n                    \r\n//                     }   */}\r\n                    \r\n//                     {/* // images.map(img => (\r\n                        \r\n//                     //     <li key={img.id}> {img.title} </li>\r\n                        \r\n//                     // )) */}\r\n                \r\n//                     {/* Esto se puede desestructurar, quedando\r\n                    \r\n//                     images.map(({id, title}) => (\r\n\r\n//                         <li key={ id }>  {title}  </li>\r\n//                     ))\r\n                    \r\n                \r\n                    \r\n                    \r\n\r\n            \r\n        // </div> */\r\n   \r\n\r\n\r\n// images.map(catt => (\r\n\r\n//     <setImages \r\n//         key={ catt }\r\n//         title = { catt }\r\n                                \r\n//     />","import {useEffect, useState} from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( categoria ) => {\r\n\r\n    const [state, setState] = useState({\r\n\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n useEffect(() => {\r\n\r\n    getGifs(categoria)\r\n        .then(imgs => {\r\n\r\n        setTimeout( () => {\r\n\r\n            \r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n    \r\n            });\r\n\r\n        }, 3000);\r\n        \r\n\r\n        })\r\n        \r\n\r\n }, [categoria])\r\n\r\n return state;\r\n   \r\n    \r\n\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n//import ReactDOM from 'react-dom';\r\nimport  './index.css';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n\r\n    const [categorias, setCategorias] = useState(['One Piece']);\r\n    \r\n    \r\n\r\n    // const handleAdd =  () => {\r\n\r\n    //     const nuevaCat = 'SexSex';\r\n\r\n    //     setCategorias([ ...categorias, nuevaCat]);\r\n\r\n\r\n    // }\r\n\r\n    return(\r\n    <>\r\n    <h2>GifExpertApp</h2>\r\n    <AddCategory setCategorias={setCategorias}/>\r\n    <hr />\r\n    \r\n    <ol>\r\n\r\n      {\r\n        \r\n            categorias.map( categoria => (\r\n\r\n              <GifGrid \r\n                key = { categoria }\r\n                categoria = { categoria }\r\n              />\r\n\r\n            ))\r\n      }           \r\n        \r\n    </ol>\r\n\r\n\r\n    </>\r\n    )\r\n};\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  \n  document.getElementById('root')\n\n);\n\n"],"sourceRoot":""}